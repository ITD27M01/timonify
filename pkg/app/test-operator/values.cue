
// Code generated by timoni.
// Note that this file must have no imports and all values must be concrete.

@if(!debug)

package main

// Defaults
values: {
	webhookService: {
		type: "ClusterIP"
		ports: [{
			port:       443
			targetPort: 9443
		}]
	}
	secretVars: {
		var1: ""
		var2: ""
	}
	secretRegistryCredentials: {
		dockerconfigjson: ""
	}
	secretCa: {
		caCrt: ""
	}
	pvc: {
		pvcLim: {
			storageRequest: "2Gi"
			storageClass:   "cust1-mypool-lim"
		}
	}
	metricsService: {
		type: "ClusterIP"
		ports: [{
			name:       "https"
			port:       8443
			targetPort: "https"
		}]
	}
	managerConfig: {
		controllerManagerConfigYaml: """
			apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
			kind: ControllerManagerConfig
			health:
			  healthProbeBindAddress: :8081
			metrics:
			  bindAddress: 127.0.0.1:8080
			webhook:
			  port: 9443
			leaderElection:
			  leaderElect: true
			  resourceName: 3a2e09e9.example.com
			rook:
			  namespace: rook-ceph
			  toolboxPodLabel: rook-ceph-tools
			"""
		dummyconfigmapkey: "dummyconfigmapvalue"
	}
	kubernetesClusterDomain: "cluster.local"
	controllerManager: {
		serviceAccount: {
			annotations: {
				"k8s.acme.org/some-meta-data": "ACME Inc."
			}
		}
		replicas: 1
		manager: {
			containerSecurityContext: {
				seccompProfile: {
					type: "RuntimeDefault"
				}
				runAsUser:              65532
				readOnlyRootFilesystem: true
				privileged:             false
				capabilities: {
					drop: ["ALL"]
				}
				allowPrivilegeEscalation: false
				runAsNonRoot:             true
			}
			imagePullPolicy: "Always"
			image: {
				tag:        "latest"
				repository: "controller"
			}
			env: {
				var3MyEnv: "ciao"
				var2:      "ciao"
			}
			args: ["--health-probe-bind-address=:8081", "--metrics-bind-address=127.0.0.1:8080", "--leader-elect"]
			resources: {
				limits: {
					memory: "30Mi"
					cpu:    "100m"
				}
				requests: {
					memory: "20Mi"
					cpu:    "100m"
				}
			}
		}
		kubeRbacProxy: {
			image: {
				tag:        "v0.8.0"
				repository: "gcr.io/kubebuilder/kube-rbac-proxy"
			}
			args: ["--secure-listen-address=0.0.0.0:8443", "--upstream=http://127.0.0.1:8080/", "--logtostderr=true", "--v=10"]
		}
		nodeSelector: {
			region: "east"
			type:   "user-node"
		}
	}
	configmapVars: {
		var4: "value for var4"
	}
}
