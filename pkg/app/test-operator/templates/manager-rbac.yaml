apiVersion: rbac.authorization.k8s.io/v1
kind:       ClusterRole
metadata: {
  name: #config.metadata.name + "-manager-role"
  labels: #config.test-operator.metadata.labels & {
{
	rules: [{
		apiGroups: [""]
		resources: ["pods"]
		verbs: ["get", "list"]
	}, {
		apiGroups: [""]
		resources: ["pods/exec"]
		verbs: ["create", "get"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["cephvolumes"]
		verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["cephvolumes/finalizers"]
		verbs: ["update"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["cephvolumes/status"]
		verbs: ["get", "patch", "update"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["manifestcephvolumes"]
		verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["manifestcephvolumes/finalizers"]
		verbs: ["update"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["manifestcephvolumes/status"]
		verbs: ["get", "patch", "update"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["storagetypes"]
		verbs: ["get", "list", "watch"]
	}, {
		apiGroups: ["test.example.com"]
		resources: ["storagetypes/status"]
		verbs: ["get"]
	}]
}
---
apiVersion: rbac.authorization.k8s.io/v1
kind:       ClusterRoleBinding
metadata: {
  name: #config.metadata.name + "-manager-rolebinding"
  labels: #config.test-operator.metadata.labels & {
{
	roleRef: {
		apiGroup: "rbac.authorization.k8s.io"
		kind:     "ClusterRole"
		name:     "#config.metadata.name + \"-manager-role\""
	}
}
{
	subjects: [{
		kind:      "ServiceAccount"
		name:      "#config.metadata.name + \"-controller-manager\""
		namespace: "{{ .Release.Namespace }}"
	}]
}